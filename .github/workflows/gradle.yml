name: Java CI/CD with Gradle

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up GitHub credentials
        run: |
          git config --global url."https://${{ secrets.TOKEN_GIT }}@github.com/".insteadOf "https://github.com/"

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Build with Gradle Wrapper (without test)
        run: ./gradlew build -x test
        working-directory: Mesh_backend

      - name: Upload Build Artifact to EC2
        env:
          EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
          EC2_HOST: ${{ secrets.EC2_HOST }}
        run: |
          echo "$EC2_SSH_KEY" > $RUNNER_TEMP/mesh-backend-key.pem
          chmod 600 $RUNNER_TEMP/mesh-backend-key.pem
          scp -o StrictHostKeyChecking=no -i $RUNNER_TEMP/mesh-backend-key.pem Mesh_backend/build/libs/*.jar ubuntu@$EC2_HOST:/home/ubuntu/app/step1/

      - name: Deploy to EC2
        env:
          EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
          EC2_HOST: ${{ secrets.EC2_HOST }}
        run: |
          echo "$EC2_SSH_KEY" > $RUNNER_TEMP/mesh-backend-key.pem
          chmod 600 $RUNNER_TEMP/mesh-backend-key.pem
          ssh -o StrictHostKeyChecking=no -o ServerAliveInterval=60 -o ServerAliveCountMax=5 -i $RUNNER_TEMP/mesh-backend-key.pem ubuntu@$EC2_HOST "
            nohup java -jar /home/ubuntu/app/step1/Mesh_backend-0.0.1-SNAPSHOT.jar > /home/ubuntu/app/step1/logs/app.log 2>&1 &"
